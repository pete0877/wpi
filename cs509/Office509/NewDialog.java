/*
	A basic extension of the java.awt.Dialog class
 */

import java.awt.*;

public class NewDialog extends Dialog {

	public NewDialog(Frame parent, boolean modal)
	{
		super(parent, modal);

		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.

		//{{INIT_CONTROLS
		setLayout(null);
		setVisible(false);
		setSize(270,150);
		label1 = new java.awt.Label("Select the Type of Document to Create");
		label1.setBounds(12,12,228,21);
		add(label1);
		rendererButton = new java.awt.Button();
		rendererButton.setLabel("Renderer");
		rendererButton.setBounds(12,48,72,24);
		add(rendererButton);
		cancelButton = new java.awt.Button();
		cancelButton.setLabel("Cancel");
		cancelButton.setBounds(96,120,72,24);
		add(cancelButton);
		presentationButton = new java.awt.Button();
		presentationButton.setLabel("Presentation");
		presentationButton.setBounds(96,48,72,24);
		add(presentationButton);
		databaseButton = new java.awt.Button();
		databaseButton.setLabel("Database");
		databaseButton.setBounds(180,48,72,24);
		add(databaseButton);
		setTitle("About");
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		rendererButton.addActionListener(lSymAction);
		presentationButton.addActionListener(lSymAction);
		databaseButton.addActionListener(lSymAction);
		cancelButton.addActionListener(lSymAction);
		//}}

	}

	public NewDialog(Frame parent, String title, boolean modal)
	{
		this(parent, modal);
		setTitle(title);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
                Dimension d = getSize();

		super.addNotify();

		// Only do this once.
		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}

		// Used for addNotify check.
		fComponentsAdjusted = true;
	}

	public void setVisible(boolean b)
	{
	    if (b)
	    {
    		Rectangle bounds = getParent().bounds();
    		Rectangle abounds = bounds();

    		move(bounds.x + (bounds.width - abounds.width)/ 2,
    			 bounds.y + (bounds.height - abounds.height)/2);
	    }

		super.setVisible(b);
	}

	//{{DECLARE_CONTROLS
	java.awt.Label label1;
	java.awt.Button rendererButton;
	java.awt.Button cancelButton;
	java.awt.Button presentationButton;
	java.awt.Button databaseButton;
	//}}

        // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == NewDialog.this)
				NewDialog_WindowClosing(event);
		}
	}

	void NewDialog_WindowClosing(java.awt.event.WindowEvent event)
	{
                dispose();
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == rendererButton)
				rendererButton_Clicked(event);
			else if (object == presentationButton)
				presentationButton_ActionPerformed(event);
			else if (object == databaseButton)
				databaseButton_ActionPerformed(event);
			else if (object == cancelButton)
				cancelButton_ActionPerformed(event);
		}
	}

	void rendererButton_Clicked(java.awt.event.ActionEvent event)
	{
		//{{CONNECTION
		dispose();
		TextDialog td = new TextDialog ((Frame1) getParent(), true, Frame1.RendererType);
		td.setVisible(true);
		//}}
	}

	void presentationButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		//{{CONNECTION
		dispose();
		TextDialog td = new TextDialog ((Frame1) getParent(), true, Frame1.PresentationType);
		td.setVisible(true);
		//}}
	}

	void databaseButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		//{{CONNECTION
		Frame1 f1 = (Frame1) getParent();
		f1.createObject (Frame1.DatabaseType, "");
		dispose();
		//}}
	}

	void cancelButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		//{{CONNECTION
		dispose();
		//}}
	}
}
