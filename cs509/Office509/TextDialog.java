/*
	A basic extension of the java.awt.Dialog class
 */

import java.awt.*;

public class TextDialog extends Dialog {

    /**
     * The type of the object being entered by string.  once 'save' is pressed, we will contact
     * the Frame1 object to create the object by passing in this type as a parameter together with
     * the contents of a string typed in the stringArea textfield of this dialog.
     */
    protected String type = null;
    
	public TextDialog(Frame1 parent, boolean modal, String type)
	{
		super(parent, modal);

		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.

		//{{INIT_CONTROLS
		setLayout(null);
		setVisible(false);
		setSize(500,300);
		label1 = new java.awt.Label("Enter the formatted string:");
		label1.setBounds(12,12,144,21);
		add(label1);
		cancelButton = new java.awt.Button();
		cancelButton.setLabel("Cancel");
		cancelButton.setBounds(252,204,72,24);
		add(cancelButton);
		saveButton = new java.awt.Button();
		saveButton.setLabel("Save");
		saveButton.setBounds(96,204,72,24);
		add(saveButton);
		stringArea = new java.awt.TextArea();
		stringArea.setBounds(12,36,384,156);
		add(stringArea);
		setTitle("About");
		//}}

		//{{REGISTER_LISTENERS
		SymWindow aSymWindow = new SymWindow();
		this.addWindowListener(aSymWindow);
		SymAction lSymAction = new SymAction();
		saveButton.addActionListener(lSymAction);
		cancelButton.addActionListener(lSymAction);
		//}}
		
		// save the type for later use.
		this.type = type;

	}

	public TextDialog(Frame1 parent, String title, boolean modal, String type)
	{
		this(parent, modal, type);
		setTitle(title);
	}

	public void addNotify()
	{
		// Record the size of the window prior to calling parents addNotify.
                Dimension d = getSize();

		super.addNotify();

		// Only do this once.
		if (fComponentsAdjusted)
			return;

		// Adjust components according to the insets
		setSize(insets().left + insets().right + d.width, insets().top + insets().bottom + d.height);
		Component components[] = getComponents();
		for (int i = 0; i < components.length; i++)
		{
			Point p = components[i].getLocation();
			p.translate(insets().left, insets().top);
			components[i].setLocation(p);
		}

		// Used for addNotify check.
		fComponentsAdjusted = true;
	}

	public void setVisible(boolean b)
	{
	    if (b)
	    {
    		Rectangle bounds = getParent().bounds();
    		Rectangle abounds = bounds();

    		move(bounds.x + (bounds.width - abounds.width)/ 2,
    			 bounds.y + (bounds.height - abounds.height)/2);
	    }

		super.setVisible(b);
	}

	//{{DECLARE_CONTROLS
	java.awt.Label label1;
	java.awt.Button cancelButton;
	java.awt.Button saveButton;
	java.awt.TextArea stringArea;
	//}}

        // Used for addNotify check.
	boolean fComponentsAdjusted = false;

	class SymWindow extends java.awt.event.WindowAdapter
	{
		public void windowClosing(java.awt.event.WindowEvent event)
		{
			Object object = event.getSource();
			if (object == TextDialog.this)
				TextDialog_WindowClosing(event);
		}
	}

	void TextDialog_WindowClosing(java.awt.event.WindowEvent event)
	{
                dispose();
	}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == saveButton)
				saveButton_ActionPerformed(event);
			else if (object == cancelButton)
				cancel_ActionPerformed(event);
		}
	}


	void saveButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		//{{CONNECTION
		String contents = stringArea.getText();
		Frame1 f1 = (Frame1) getParent();
		f1.createObject (type, contents);
		dispose();
		//}}
	}

	void cancel_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
			 
		//{{CONNECTION
		dispose();
		//}}
	}
}
