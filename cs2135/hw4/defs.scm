(define lexp1 '(LAND (LOR X Y) Y))
(define lexp2 '(LAND (LNOT Y) (LOR U V)))
(define lexp3 '(LOR X Y) )
(define lexp4 'Z )
(define lexp5 '(LEQUIVALENT (LAND Z Y) (LOR U V)) )
(define lexp6 '(LIMPLIES U V) )
(define lexp7 '(LIMPLIES U X) )
(define lexp8 '(LIMPLIES X U) )

(define lexp9 '(LAND (LEQUIVALENT U (LOR V X)) 
	(LIMPLIES Y Z)))

(define nonlexp1 '(LOR (LAND X (Y)) Z)  )
(define nonlexp2 '(LAND (LNOT Y) (LNOR U V)) )
(define los1 '(U Z Y X V) )
(define los2 '(U Z B X A) )
(define alist1 '((U . 0) (Z . 1) (Y . 0) (X . 1) (V . 0)) )
(define alist2 '((U . 0) (Z . 1) (B . 0) (X . 1) (A . 0)) )
(define a 'y)
(define b 'u)
(define al1 '((x . 1)(y . 0)))
(define al2 '((u . 1)(v . 1)))
(define al3 '())
(define los '(X Y Z U))
