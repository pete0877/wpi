/* Generated By:JJTree: Do not edit this line. SimpleNode.java */

public class SimpleNode implements Node {
  protected Node parent;
  protected Node[] children;
  protected int id;
  protected tea parser;

  public String myname=null;
  public String value=null;
  public String ovalue=null;
  public int line_number=0;

  public SimpleNode(int i) {
    id = i;
  }

  public SimpleNode(tea p, int i) {
    this(i);
    parser = p;
  }

  public void jjtOpen() {
  }

  public void jjtClose() {
  }
  
  public void jjtSetParent(Node n) { parent = n; }
  public Node jjtGetParent() { return parent; }

  public void jjtAddChild(Node n, int i) {
    if (children == null) {
      children = new Node[i + 1];
    } else if (i >= children.length) {
      Node c[] = new Node[i + 1];
      System.arraycopy(children, 0, c, 0, children.length);
      children = c;
    }
    children[i] = n;
  }

  public Node jjtGetChild(int i) {
    return children[i];
  }

  public int jjtGetNumChildren() {
    return (children == null) ? 0 : children.length;
  }
  /* Override this method if you want to customize how the node dumps
     out its children. */

  public void dump(String prefix) { dump2(prefix, line_number - 1); }

  public void dump2(String prefix, int line) {     	
	if (myname == null) {
		/* just a pass through node */
		SimpleNode n = (SimpleNode)children[0];
		n.dump2(prefix, line);	
	} else {		
		if ((children == null) && ( value == null )) {
			/* just a single value or id ... don't need ()*/
			System.out.print("\n" + prefix + myname);
		} else {	
			String temp;	
			temp = "\n" + prefix + myname +  " (";
			if ( value != null ) { 
				if (line!=line_number) System.out.print("\nLINE " + line_number + ":\n");
				temp += "\n" + prefix + "     " + value;
				if ( ovalue != null ) temp += "\n" + prefix + "     " + ovalue;
			}
			System.out.print(temp);
			if (children != null) {	  	  
			  for (int i = 0; i < children.length; ++i) {
				SimpleNode n = (SimpleNode)children[i];
				if (n != null) { n.dump2(prefix + "     ", line_number); }
			  }	 
			}
			System.out.print("\n" + prefix + ")");    			
		}
	}
  }
}

